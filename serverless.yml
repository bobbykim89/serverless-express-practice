org: bobbykim89
app: serverless-practice
service: serverless-practice
frameworkVersion: '3'

custom:
  tableName: 'users-table-${sls:stage}'
  productTable: 'product-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - cognito-idp:AdminInitiateAuth
            - cognito-idp:AdminCreateUser
            - cognito-idp:AdminSetUserPassword
          Resource:
            - Fn::GetAtt: [UsersTable, Arn]
            - Fn::GetAtt: [ProductTable, Arn]
            - Fn::GetAtt: [UserPool, Arn]

  environment:
    USERS_TABLE: ${self:custom.tableName}
    PROD_TABLE: ${self:custom.productTable}
    USER_POOL_ID: { Ref: UserPool }
    CLIENT_ID: { Ref: UserClient }
  httpApi:
    cors: true

functions:
  api:
    handler: dist/handler.handler
    events:
      - httpApi: '*'

package:
  excludeDevDependencies: true
  patterns:
    - '!src/**'

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
    ProductTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: prodId
            AttributeType: S
        KeySchema:
          - AttributeName: prodId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.productTable}
    UserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: serverless-practice-user-pool
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireNumbers: true
            RequireUppercase: true
            RequireSymbols: true
        AutoVerifiedAttributes: ['email']
    UserClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: serverless-practice-user-pool-ui
        GenerateSecret: false
        UserPoolId: { Ref: UserPool }
        AccessTokenValidity: 24
        IdTokenValidity: 24
        ExplicitAuthFlows:
          ['ALLOW_ADMIN_USER_PASSWORD_AUTH', 'ALLOW_REFRESH_TOKEN_AUTH']

plugins:
  - serverless-bundle
